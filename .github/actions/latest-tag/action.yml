name: "Get the latest semver compatible tag on this repo"
description: "Use the branch name passed (can be either refs/heads/name-of-thing or just name-of-thing)."
inputs:
  prerelease:
    description: "If set, looks for pre-release tag patterns (v1.1.1-${suffix}.${count})"
    default: ""
  prerelease_suffix:
    description: "If prerelease is set, this string is used as the ${suffix} in the tag pattern. (Default: beta)"
    default: "beta"
  branch_name:
    description: "Current branch name"
    default: "beta"
  release_branches:
    description: "Branches that would trigger this as a release."
    default: "main,master"
  caller_repo_subfolder:
    description: "Location to checkout active repository into. (Default: ./latest-tag-caller-repository)"
    default: "./latest-tag-caller-repository"
  ## Used to capture the intial values before they get overwritten
  action_ref:
    description: "Capture the starting value of github.action_ref. DO NOT SET"
    default: ${{ github.action_ref }}
  action_repository:
    description: "Capture the starting value of github.action_repository. DO NOT SET"
    default: ${{ github.action_repository }}

outputs:
  prerelease:
    description: "Inputed prerelease variable."
    value: ${{ steps.latest.outputs.prerelease_calculated }}
  prerelease_suffix:
    description: "Inputed prerelease_suffix variable."
    value: ${{ steps.latest.outputs.prerelease_suffix }}
  latest:
    description: "Latest tag found"
    value: ${{steps.latest.outputs.latest}}
  last_release:
    description: "Last release tag found"
    value: ${{steps.latest.outputs.last_release}}


runs:
  using: "composite"
  steps:
    - name: "Checkout original repo to set folder"
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        ref: ${{ github.ref }}
        path: ${{inputs.caller_repo_subfolder}}
        fetch-tags: true
        fetch-depth: 0
    - name: "Checkout this actions repo into a subfolder at this version"
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.action_repository }}
        ref: ${{ inputs.action_ref }}
        path: ./_ghlatesttagaction
    - name: pip
      shell: bash
      env:
        PY_APP_DIR: "${{github.workspace}}/./_ghlatesttagaction/python"
      run: |
        echo -e "# pip setup:"
        echo -e "PY_APP_DIR: ${PY_APP_DIR}"
        cd ${PY_APP_DIR}
        pip install -q -r ./requirements.txt
        pip install -e .
    - name: Get latest Tag
      id: latest
      shell: bash
      env:
        PY_APP_DIR: "${{github.workspace}}/./_ghlatesttagaction/python"
        TARGET_REPO: "${{github.workspace}}/${{inputs.caller_repo_subfolder}}"
        BRANCH_NAME: ${{inputs.branch_name}}
        RELEASE_BRANCHES: ${{inputs.release_branches}}
        PRERELEASE: ${{inputs.prerelease}}
        PRERELEASE_SUFFIX: ${{inputs.prerelease_suffix}}
      run: |
        echo -e "# latest-tag setup:"
        echo -e "PY_APP_DIR: ${PY_APP_DIR}"
        echo -e "TARGET_REPO: ${TARGET_REPO}"
        echo -e "BRANCH_NAME: ${BRANCH_NAME}"
        echo -e "RELEASE_BRANCHES: ${RELEASE_BRANCHES}"
        echo -e "PRERELEASE_SUFFIX: ${PRERELEASE_SUFFIX}"

        cd ${PY_APP_DIR}
        python ./actions/commands/latest_tag.py \
          --repository_root="${TARGET_REPO}" \
          --branch_name="${BRANCH_NAME}" \
          --release_branches="${RELEASE_BRANCHES}" \
          --prerelease="${PRERELEASE}" \
          --prerelease_suffix="${PRERELEASE_SUFFIX}"
