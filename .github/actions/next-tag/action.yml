name: "Create semver tag at current github ref using passed branch name as a suffix."
description: "Use the branch name passed (can be either refs/heads/name-of-thing or just name-of-thing)."
inputs:
  test:
    description: "If set, run test versions of data"
    default: ""
  test_file:
    description: "If test is set, then use the content of this file"
    default: ""
  prerelease:
    description: "If set, looks for pre-release tag patterns (v1.1.1-${suffix}.${count})"
    default: ""
  prerelease_suffix:
    description: "If prerelease is set, this string is used as the ${suffix} in the tag pattern. (Default: beta)"
    default: "beta"
  latest_tag:
    description: "Lastest tag to bump from."
    default: ""
  last_release:
    description: "Last release tag"
    default: ""
  default_bump:
    description: "Bump version along by this. (Default: minor)"
    default: "minor"
  commitish:
    description: "Branch to compare commits from"
    default: ""
  with_v:
    description: "New tag will start with a v prefix"
    default: "false"
  caller_repo_subfolder:
    description: "Location to checkout active repository into. (Default: ./next-tag-caller-repository)"
    default: "./next-tag-caller-repository"

  
outputs:
  test:
    description: "Inputed test variable."    
    value: ${{inputs.test}}
  test_file:
    description: "Inputed test_file variable."    
    value: ${{inputs.test_file}}
  prerelease:
    description: "Inputed prerelease variable."
    value: ${{ inputs.prerelease }}
  prerelease_suffix:
    description: "Inputed prerelease_suffix variable."
    value: ${{ inputs.prerelease_suffix }}
  latest_tag:
    description: "Inputed latest_tag variable."
    value: ${{inputs.latest_tag}}
  last_release:
    description: "Inputed last_release variable."
    value: ${{inputs.last_release}}
  with_v:
    description: "Inputed with_v variable."
    value: ${{inputs.with_v}}
  
  next_tag:
    description: "Next tag that should be created."
    value: ${{steps.get_next_tag.outputs.next_tag}}


runs:
  using: "composite"
  steps:
    - name: "Checkout original repo to set folder"
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        ref: ${{ github.head_ref }}
        path: ${{inputs.caller_repo_subfolder}}
        fetch-tags: true
    - name: Fetch repo content
      id: fetch_tags      
      shell: bash
      working-directory: ${{inputs.caller_repo_subfolder}}
      run: |     
        git fetch --quiet --unshallow || git fetch --quiet --all
        git fetch --tags --quiet

        echo "base ref>>${{github.base_ref}}"
        echo "head ref>>${{github.head_ref}}"
        echo "ref name>>${{github.ref_name}}"
        echo "sha >>${{github.sha}}"
        git rev-parse HEAD
        
        git log --oneline "${{github.base_ref}}"..."${{github.head_ref}}"

        
    # - name: Install libs
    #   id: install_libs
    #   shell: bash
    #   run: |
    #     pip3 install git+https://github.com/python-semver/python-semver.git@3.0.2 -q -q
    #     pip3 install git+https://github.com//gitpython-developers/GitPython.git@3.1.40 -q -q
    # - name: Get new Tag
    #   id: get_next_tag
    #   shell: bash
    #   env:
    #     RUN_AS_TEST: ${{inputs.test}}
    #   run: |      
    #     src="${{github.action_path}}"
    #     repo="${{github.workspace}}/${{inputs.caller_repo_subfolder}}"
    #     python ${src}/./next-tag.py \
    #       --repository_root="${repo}" \
    #       --commits="${{github.workspace}}/${{inputs.caller_repo_subfolder}}/commits" \
    #       --default_bump="${{inputs.default_bump}}" \
    #       --default_branch="${{ github.event.repository.default_branch }}" \
    #       --prerelease="${{inputs.prerelease}}" \
    #       --prerelease_suffix="${{inputs.prerelease_suffix}}" \
    #       --latest_tag="${{inputs.latest_tag}}" \
    #       --last_release="${{inputs.last_release}}" \
    #       --with_v="${{inputs.with_v}}" \
    #       --test_file="${src}/${{inputs.test_file}}"