name: "Create semver tag at current github ref using passed branch name as a suffix."
description: "Use the branch name passed (can be either refs/heads/name-of-thing or just name-of-thing)."
inputs:
  test:
    description: "If set, run test versions of data"
    default: ""
  test_file:
    description: "If test is set, then use the content of this file"
    default: ""
  prerelease:
    description: "If set, looks for pre-release tag patterns (v1.1.1-${suffix}.${count})"
    default: ""
  prerelease_suffix:
    description: "If prerelease is set, this string is used as the ${suffix} in the tag pattern. (Default: beta)"
    default: "beta"
  latest_tag:
    description: "Lastest tag to bump from."
    default: ""
  last_release:
    description: "Last release tag"
    default: ""
  default_bump:
    description: "Bump version along by this. (Default: minor)"
    default: "minor"
  with_v:
    description: "New tag will start with a v prefix"
    default: ""
  caller_repo_subfolder:
    description: "Location to checkout active repository into. (Default: ./next-tag-caller-repository)"
    default: "./next-tag-caller-repository"

  
outputs:
  test:
    description: "Inputed test variable."    
    value: ${{inputs.test}}
  test_file:
    description: "Inputed test_file variable."    
    value: ${{inputs.test_file}}
  prerelease:
    description: "Inputed prerelease variable."
    value: ${{ inputs.prerelease }}
  prerelease_suffix:
    description: "Inputed prerelease_suffix variable."
    value: ${{ inputs.prerelease_suffix }}
  latest_tag:
    description: "Inputed latest_tag variable."
    value: ${{inputs.latest_tag}}
  last_release:
    description: "Inputed last_release variable."
    value: ${{inputs.last_release}}
  with_v:
    description: "Inputed with_v variable."
    value: ${{inputs.with_v}}
  
  next_tag:
    description: "Next tag that should be created."
    value: ${{steps.get_next_tag.outputs.next_tag}}
  commit_a:
    description: "Commit used to look for version bump triggers in messages"
    value: ${{steps.get_next_tag.outputs.commit_a}}
  commit_b:
    description: "Commit used to look for version bump triggers in messages"
    value: ${{steps.get_next_tag.outputs.commit_b}}


runs:
  using: "composite"
  steps:
    - name: "Checkout original repo to set folder"
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        ref: ${{ github.head_ref }}
        path: ${{inputs.caller_repo_subfolder}}
        fetch-tags: true
        fetch-depth: 0
    # - name: Fetch repo content
    #   id: fetch  
    #   shell: bash
    #   working-directory: ${{inputs.caller_repo_subfolder}}
    #   run: |
    #     set -eo pipefail       
    #     # get the sha for the head_ref
    #     # this should be the branch being merged to the default branch
    #     current_sha=$(git rev-parse HEAD)
    #     current_sha=${current_sha:0:7}

    #     # checkout to the base_ref
    #     # this should be the default branch - generally main
    #     git checkout -f "${{github.base_ref}}" --quiet
    #     git pull origin "${{github.base_ref}}" --quiet
    #     # get revision data
    #     default_sha=$(git rev-parse HEAD)
    #     default_sha=${default_sha:0:7}
        
    #     echo "default_branch      = ${{github.base_ref}}"
    #     echo "current_branch      = ${{github.head_ref}}"
    #     echo "ref_name            = ${{github.ref_name}}"
    #     echo "ref_sha             = ${{github.sha}}"
    #     echo "current_branch_sha  = ${current_sha}"
    #     echo "default_branch_sha  = ${default_sha}"

    #     echo "commit_a=${current_sha}" >> $GITHUB_OUTPUT
    #     echo "commit_b=${default_sha}" >> $GITHUB_OUTPUT
    #     # git log --oneline "${{github.base_ref}}".."${{github.head_ref}}"

    - name: Install libs
      id: install_libs
      shell: bash
      run: |
        pip3 install git+https://github.com/python-semver/python-semver.git@3.0.2 -q -q
        pip3 install git+https://github.com//gitpython-developers/GitPython.git@3.1.40 -q -q
    - name: Get new Tag
      id: get_next_tag
      shell: bash
      env:
        RUN_AS_TEST: ${{inputs.test}}
      run: |      
        src="${{github.action_path}}"
        repo="${{github.workspace}}/${{inputs.caller_repo_subfolder}}"
        python ${src}/./next-tag.py \
          --repository_root="${repo}" \
          --commit_a="${{ github.head_ref }}" \
          --commit_b="${{github.base_ref}}" \
          --prerelease="${{inputs.prerelease}}" \
          --prerelease_suffix="${{inputs.prerelease_suffix}}" \
          --latest_tag="${{inputs.latest_tag}}" \
          --last_release="${{inputs.last_release}}" \
          --with_v="${{inputs.with_v}}" \
          --default_bump="${{inputs.default_bump}}" \
          --test_file="${src}/${{inputs.test_file}}"