name: "Create a new git tag at the commitish passed"
description: "Create a new git tag at the commitish passed"
inputs:
  commitish:
    description: "The github commit reference to checkout to and create the tag at"
    required: true
  tag_name:
    description: "Name of the tag to create"
    required: true
  test:
    description: "If set, tag is not pushed to the remote."
    default: ""
  caller_repo_subfolder:
    description: "Location to checkout active repository into. (Default: ./create-tag-caller-repository)"
    default: "./create-tag-caller-repository"
  ## Used to capture the intial values before they get overwritten
  action_ref:
    description: "Capture the starting value of github.action_ref. DO NOT SET"
    default: ${{ github.action_ref }}
  action_repository:
    description: "Capture the starting value of github.action_repository. DO NOT SET"
    default: ${{ github.action_repository }}


outputs:
  commitish:
    description: "Inputed commitish variable."
    value: ${{ inputs.commitish }}
  original_tag_name:
    description: "Inputed tag_name variable."
    value: ${{ inputs.tag_name }}
  test:
    description: "Inputed test variable."
    value: ${{ inputs.test }}

  latest:
    description: "Latest tag found at commitish provided. This will be the 'biggest' release number and may not match the created tag."
    value: ${{steps.create_tag.outputs.latest_tag}}
  created:
    description: "The tag name that is created. It may differ from inputs.tag_name if this tag already exists. Compare to requested variable to see if these match"
    value: ${{steps.create_tag.outputs.created_tag}}
  requested:
    description: "The tag name that was requested to be created. May differ from the created tag if there is a name clash."
    value: ${{steps.create_tag.outputs.requested_tag}}

  all:
    description: "All tags (comma seperated) that are found to be pointing to inputted commish"
    value: ${{steps.create_tag.outputs.all_tags}}

runs:
  using: "composite"
  steps:
    - name: "Checkout original repo to set folder"
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        ref: ${{ github.head_ref }}
        path: ${{inputs.caller_repo_subfolder}}
        fetch-tags: true
        fetch-depth: 0
    - name: "Checkout this actions repo into a subfolder at this version"
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.action_repository }}
        ref: ${{ inputs.action_ref }}
        path: ./_ghcreatetagaction
    - name: "Setup python"
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: pip
      shell: bash
      env:
        PY_APP_DIR: "./_ghcreatetagaction/python"
      run: |
        cd ${PY_APP_DIR}
        pip install -q -r ./requirements.txt
        pip install -e .
    - name: Create tag
      id: create_tag
      shell: bash
      env:
        PY_APP_DIR: "./_ghcreatetagaction/python"
        ACTION_SRC: ${{ github.action_path }}
        TARGET_REPO: "${{github.workspace}}/${{inputs.caller_repo_subfolder}}"
        COMMITISH: ${{inputs.commitish}}
        TAG_NAME: ${{inputs.tag_name}}
        RUN_AS_TEST: ${{ inputs.test }}
      run: |
        echo -e "# create-tag setup:"
        echo -e "PY_APP_DIR: ${PY_APP_DIR}"
        echo -e "TARGET_REPO: ${TARGET_REPO}"
        echo -e "COMMITISH: ${COMMITISH}"
        echo -e "TAG_NAME: ${TAG_NAME}"
        echo -e "RUN_AS_TEST: ${RUN_AS_TEST}"

        cd ${PY_APP_DIR}
        python ./actions/commands/create_tag.py \
          --repository_root="${TARGET_REPO}" \
          --commitish="${COMMITISH}" \
          --tag_name="${TAG_NAME}"
