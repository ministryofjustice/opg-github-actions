name: "Safe string generation"
description: "Convert a string into shortern and remove unsafe characters. If conditional_match is set and original equals this value then conditional_value is used for the outputs."
inputs:
  original:
    description: "Original string (such as branch name) to make safe for tag usage etc"
    required: true
  suffix:
    description: "Additional string at the end"
    default: ""
  conditional_match:
    description: "If the original string matches this value, then use the conditional_value directly."
    default: ""
  conditional_value:
    description: "When original matches conditional_match use this value for all other outputs directly."
    default: ""
  length:
    description: "If set, trim the string to this length"
  ## Used to capture the intial values before they get overwritten
  action_ref:
    description: "Capture the starting value of github.action_ref. DO NOT SET"
    default: ${{ github.action_ref }}
  action_repository:
    description: "Capture the starting value of github.action_repository. DO NOT SET"
    default: ${{ github.action_repository }}

outputs:
  original:
    description: "Original string"
    value: ${{ inputs.original }}
  suffix:
    description: "Original suffix"
    value: ${{ inputs.suffix }}
  length:
    description: "Originally requested length"
    value: ${{ steps.make_safe.outputs.length }}
  full_length:
    description: "Alphanumeric, lowercase, but full length version of the original string."
    value: ${{ steps.make_safe.outputs.full_length }}
  safe:
    description: "Alphanumeric, lowercase, trimmed to length version of the original string."
    value: ${{ steps.make_safe.outputs.safe }}

runs:
  using: "composite"
  steps:
    - name: "Checkout this actions repo into a subfolder at this version"
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.action_repository }}
        ref: ${{ inputs.action_ref }}
        path: ./_ghsafestringsaction
    - name: "Setup python"
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: pip
      shell: bash
      env:
        PY_APP_DIR: "${{github.workspace}}./_ghsafestringsaction/python"
      run: |
        echo -e "# pip setup:"
        echo -e "PY_APP_DIR: ${PY_APP_DIR}"
        cd ${PY_APP_DIR}
        pip install -q -r ./requirements.txt
        pip install -e .
    - name: Create Safe strings
      id: make_safe
      shell: bash
      env:
        PY_APP_DIR: "${{github.workspace}}./_ghsafestringsaction/python"
        ORIGINAL_STRING: ${{inputs.original}}
        STRING_SUFFIX: ${{inputs.suffix}}
        STRING_LENGTH: ${{inputs.length}}
        CONDITIONAL_MATCH: ${{inputs.conditional_match}}
        CONDITIONAL_VALUE: ${{inputs.conditional_value}}
        RUN_AS_TEST: ${{inputs.test}}
      run: |
        echo -e "# safe-strings setup:"
        echo -e "PY_APP_DIR: ${PY_APP_DIR}"
        echo -e "ORIGINAL_STRING: ${ORIGINAL_STRING}"
        echo -e "STRING_SUFFIX: ${STRING_SUFFIX}"
        echo -e "STRING_LENGTH: ${STRING_LENGTH}"
        echo -e "CONDITIONAL_MATCH: ${CONDITIONAL_MATCH}"
        echo -e "CONDITIONAL_VALUE: ${CONDITIONAL_VALUE}"
        echo -e "RUN_AS_TEST: ${RUN_AS_TEST}"

        cd ${PY_APP_DIR}
        python ./actions/commands/safe_strings.py \
          --string="${ORIGINAL_STRING}" \
          --suffix="${STRING_SUFFIX}" \
          --length="${STRING_LENGTH}" \
          --conditional_match="${CONDITIONAL_MATCH}" \
          --conditional_value="${CONDITIONAL_VALUE}"
