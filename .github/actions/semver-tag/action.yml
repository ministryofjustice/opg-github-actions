name: "Create semver tag at current github sha using passed branch name as a suffix."
description: "Use the branch name passed (can be either refs/heads/name-of-thing or just name-of-thing)."
inputs:
  test:
    description: "If set, acts as a dry run without creating items"
    default: ""
  release_branch:
    description: "Release branch main - if branch name matches this the tag change to be a production style v1.1.0 without suffixes. (Default: main)"
    default: "main"
  prerelease:
    description: "If set, creates a pre-release (draft)."
    default: ""
  with_v:
    description: "New tag will start with a v prefix is this is any non-empty value."
    default: "true"
  show_verbose_summary:
    description: "Set this to any value to show the more verbose summary output data"
    default: ""
  github_token:
    description: "A token authorised with write permissions to create a release."
    default: ""
  releases_enabled:
    description: "If set, allows the creation of a release when on a release branch (and not testing)"
    default: "true"
  action_ref:
    description: "Capture the starting value of github.action_ref. DO NOT SET"
    default: ${{ github.action_ref }}
  action_repository:
    description: "Capture the starting value of github.action_repository. DO NOT SET"
    default: ${{ github.action_repository }}


outputs:
  test:
    description: "Inputed test variable."
    value: ${{ inputs.test }}
  release_branch:
    description: "Inputed release_branch variable."
    value: ${{ inputs.release_branch }}
  prerelease:
    description: "Inputed prerelease variable."
    value: ${{ inputs.prerelease }}

  branch_original:
    description: "Output from branch_name safety check - the branch_name return value"
    value: ${{ steps.branch_name.outputs.branch_name }}
  branch_full_length:
    description: "Output from branch_name safety check - the full_length return value"
    value: ${{ steps.branch_name.outputs.full_length }}
  branch_safe:
    description: "Output from branch_name safety check  - the safe return value"
    value: ${{ steps.branch_name.outputs.safe }}

  latest_tag_latest:
    description: "Output from latest_tag - the latest return value"
    value: ${{ steps.latest_tag.outputs.latest }}
  latest_tag_last_release:
    description: "Output from latest_tag - the last_release value"
    value: ${{ steps.latest_tag.outputs.last_release }}

  next_tag:
    description: "Output from next_tag - the next_tag value"
    value: ${{ steps.next_tag.outputs.next_tag }}
  next_tag_commitish_a:
    description: "Output from next_tag - the commitish_a used to look in commits for triggers"
    value: ""
  next_tag_commitish_b:
    description: "Output from next_tag - the commitish_b used to look in commits for triggers"
    value: ""

  create_tag_latest:
    description: "Output from create_tag - the latest value"
    value: ${{ steps.create_tag.outputs.latest }}
  create_tag_created:
    description: "Output from create_tag - the created value"
    value: ${{ steps.create_tag.outputs.created }}
  create_tag_all:
    description: "Output from create_tag - the all value"
    value: ${{ steps.create_tag.outputs.all }}

  release_id:
    description: "The id of the release if it was created"
    value: ${{steps.create_release.outputs.id}}
  release_url:
    description: "The html_url of the release if it was created"
    value: ${{steps.create_release.outputs.html_url}}

  created_tag:
    description: "Output from create_tag - the created value"
    value: ${{ steps.create_tag.outputs.created }}



runs:
  using: "composite"
  steps:
    - name: "Checkout this actions repo into a subfolder at this version"
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.action_repository }}
        ref: ${{ inputs.action_ref }}
        path: ./_ghsemveraction
    - shell: bash
      run: |
        ls -la ./_ghsemveraction/
        ls -la ./_ghsemveraction/.github/
        ls -la ./_ghsemveraction/.github/actions/
        ls -la ./_ghsemveraction/.github/actions/branch-name
    - name: "Generate safe branch name"
      id: branch_name
      uses: ./_ghsemveraction/.github/actions/branch-name
    - name: "Find latest tag"
      id: latest_tag
      uses: ./_ghsemveraction/.github/actions/latest-tag
      with:
          branch_name: ${{steps.branch_name.outputs.branch_name}}
          release_branches: ${{inputs.release_branch}}
          prerelease: ${{inputs.prerelease}}
          prerelease_suffix: ${{steps.branch_name.outputs.safe}}
    - name: "Find next tag"
      id: next_tag
      uses: ./_ghsemveraction/.github/actions/next-tag
      with:
          prerelease: ${{steps.latest_tag.outputs.prerelease}}
          prerelease_suffix: ${{steps.latest_tag.outputs.prerelease_suffix}}
          latest_tag: ${{steps.latest_tag.outputs.latest}}
          last_release: ${{steps.latest_tag.outputs.last_release}}
          with_v: ${{inputs.with_v}}
          commitish_a: ${{steps.branch_name.outputs.source_commitish}}
          commitish_b: ${{steps.branch_name.outputs.destination_commitish}}
    - name: "Create tag"
      id: create_tag
      uses: ./_ghsemveraction/.github/actions/create-tag
      with:
          test: ${{inputs.test}}
          commitish: ${{steps.branch_name.outputs.branch_name}}
          tag_name: ${{steps.next_tag.outputs.next_tag}}
    # if the branch is release branch, releases are enabled and this is not a test
    - id: create_release
      name: Create release
      if: ${{ ( contains(github.ref, inputs.release_branch) ) &&
              ( inputs.releases_enabled == 'true' ) &&
              ( inputs.test == '')  }}
      uses: ncipollo/release-action@v1.13.0
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        tag: ${{ steps.create_tag.outputs.created }}
        name: ${{ steps.create_tag.outputs.created }}
        draft: false
        prerelease: false
        generateReleaseNotes: true

    - name: summary
      shell: bash
      if: ${{ (always()) && (inputs.show_verbose_summary == '') }}
      run: |
        set -eo pipefail
        echo "### Semver tag summary" >> $GITHUB_STEP_SUMMARY
        echo "| Variable | Value |" >> $GITHUB_STEP_SUMMARY
        echo "| --- | --- |"  >> $GITHUB_STEP_SUMMARY
        echo "| **Created Tag** | **${{ steps.create_tag.outputs.created }}** |"  >> $GITHUB_STEP_SUMMARY
        echo "| **Release** | [${{ steps.create_release.outputs.id }}](${{ steps.create_release.outputs.html_url }}) |"  >> $GITHUB_STEP_SUMMARY


    - name: Verbose summary
      shell: bash
      if: ${{ (always()) && (inputs.show_verbose_summary != '') }}
      run: |
        set -eo pipefail
        echo "### Semver tag summary" >> $GITHUB_STEP_SUMMARY
        echo "| Stage | Variable | Value |" >> $GITHUB_STEP_SUMMARY
        echo "| --- | --- | --- |"  >> $GITHUB_STEP_SUMMARY
        echo "| Branch | original | ${{ steps.branch_name.outputs.branch_name }} |"  >> $GITHUB_STEP_SUMMARY
        echo "| Branch | safe | ${{ steps.branch_name.outputs.safe }} |"  >> $GITHUB_STEP_SUMMARY
        echo "| Branch | full_length | ${{ steps.branch_name.outputs.full_length }} |"  >> $GITHUB_STEP_SUMMARY

        echo "| Latest Tag | latest | ${{ steps.latest_tag.outputs.latest }} |"  >> $GITHUB_STEP_SUMMARY
        echo "| Latest Tag | last_release | ${{ steps.latest_tag.outputs.last_release }} |"  >> $GITHUB_STEP_SUMMARY

        echo "| Next Tag | last_release | ${{ steps.next_tag.outputs.last_release }} |"  >> $GITHUB_STEP_SUMMARY
        echo "| Next Tag | latest_tag | ${{ steps.next_tag.outputs.latest_tag }} |"  >> $GITHUB_STEP_SUMMARY
        echo "| Next Tag | commitish_a | ${{ steps.next_tag.outputs.commitish_a }} |"  >> $GITHUB_STEP_SUMMARY
        echo "| Next Tag | commitish_b | ${{ steps.next_tag.outputs.commitish_b }} |"  >> $GITHUB_STEP_SUMMARY
        echo "| Next Tag | next_tag | ${{ steps.next_tag.outputs.next_tag }} |"  >> $GITHUB_STEP_SUMMARY

        echo "| Create Tag | latest | ${{ steps.create_tag.outputs.latest }} |"  >> $GITHUB_STEP_SUMMARY
        echo "| Create Tag | test | ${{ steps.create_tag.outputs.test }} |"  >> $GITHUB_STEP_SUMMARY
        echo "| **Create Tag** | **created** | **${{ steps.create_tag.outputs.created }}** |"  >> $GITHUB_STEP_SUMMARY

        echo "| Release | URL | [${{ steps.create_release.outputs.id }}](${{ steps.create_release.outputs.html_url }}) |"  >> $GITHUB_STEP_SUMMARY
