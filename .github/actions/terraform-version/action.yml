# Find Terraform Version from the versions.tf file
name: "Parse Terraform Version From File"
description: "Determine terraform version to use from version file"
inputs:
  terraform_directory:
    description: "Directory where terraform will be run from. Looks for versions.tf file in this path."
    required: true
  terraform_versions_file:
    description: "Name of file that contains the required_version config is stored. (Default `./versions.tf`)"
    default: "./versions.tf"
  simple_file:
    description: "If set, change the parsing to presume terraform_versions_file is a plain text file that contains only a semver string."
    default: ""

outputs:
  terraform_directory:
    description: "Input value of terraform_directory"
    value: ${{ inputs.terraform_directory }}
  terraform_versions_file:
    description: "Input value of terraform_versions_file"
    value: ${{ inputs.terraform_versions_file }}
  simple_file:
    description: "Input value of simple_file"
    value: ${{ inputs.simple_file }}
  version:
    description: 'Discovered terraform version range. This may be an exact number (like 1.5.5) or a semver range (like >= 1.0).'
    value: ${{ steps.version.outputs.version }}

runs:
  using: "composite"
  steps:
    # Use bash shell script to fetch and work out releases    
    - name: "Get release binary for this runner"
      shell: bash
      id: fetch
      env:
        GH_ACTION_REPOSITORY: "${{ github.action_repository }}"
        GH_ACTION_REF:REF: "${{ github.action_ref }}"
        ACTION_WORKSPACE: "${{ github.workspace}}/opg-gha"
        actionDir: ${{ github.action_path }}
      run: |
        cd ${actionDir}
        ls -la
        ls -la ../

      

