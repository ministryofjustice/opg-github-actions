name: "[Pull Request] Workflow"

on:
  pull_request:
    branches: [main]
    paths-ignore: ['terraform/**', '.github/workflows/_terraform.yml']
    

jobs:
  # test terraform-version
  test_terraform_version:
    name: "Test terraform-version"
    uses: './.github/workflows/test-terraform-version.yml'
  
  # test terraform-workspace-manager
  test_terraform_workspace_manager:
    name: "Test terraform-workspace-manager"
    uses: './.github/workflows/test-terraform-workspace-manager.yml'

  
  # test safe-strings
  test_safe_strings:
    name: "Test safe-strings"
    uses: './.github/workflows/test-safe-strings.yml'


  # generate branch name
  branch_name:
    needs: [test_terraform_version, test_safe_strings]
    name: "Branch name"
    uses: ministryofjustice/opg-github-workflows/.github/workflows/data-parse-branch-name.yml@v2.0.0
    secrets: inherit
  
  # generate semver tag
  semver_tag:
    needs: [test_terraform_version, test_safe_strings, branch_name]
    name: "Tag [${{ needs.branch_name.outputs.original }}]"
    uses: ministryofjustice/opg-github-workflows/.github/workflows/data-parse-semver-tag.yml@v2.0.0
    with:
      branch_name: ${{ needs.branch_name.outputs.original }}
    secrets: inherit
  # Generate a release
  create_release:
    name: "Create Release (Draft)"
    runs-on: 'ubuntu-latest'
    needs: [semver_tag]
    outputs:
      id: ${{ steps.create_release.outputs.id }}
      html_url: ${{ steps.create_release.outputs.html_url }}
    steps:
      - id: create_release
        name: "Create release"
        uses: ncipollo/release-action@v1.13.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ needs.semver_tag.outputs.new_tag }}
          name: ${{ needs.semver_tag.outputs.new_tag }}
          draft: true
          prerelease: true
          generateReleaseNotes: true
  # Output summary data
  summary:
    if: always()
    name: PR
    runs-on: 'ubuntu-latest'
    needs: [branch_name, semver_tag, create_release]
    steps:
      - id: summary
        name: "Summary"
        run: |
          echo "### PR Information" >> $GITHUB_STEP_SUMMARY
          echo "| Segment | Variable | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- | --- |"  >> $GITHUB_STEP_SUMMARY
          echo "| Branch | Original | ${{ needs.branch_name.outputs.original }} |"  >> $GITHUB_STEP_SUMMARY
          echo "| Branch | Safe | ${{ needs.branch_name.outputs.safe }} |"  >> $GITHUB_STEP_SUMMARY
          echo "| Branch | Full Length | ${{ needs.branch_name.outputs.full_length }} |"  >> $GITHUB_STEP_SUMMARY          echo "| Semver | Tag | ${{ needs.semver_tag.outputs.tag }} |"  >> $GITHUB_STEP_SUMMARY
          echo "| Semver | New Tag | ${{ needs.semver_tag.outputs.new_tag }} |"  >> $GITHUB_STEP_SUMMARY
          echo "| Semver | Pre-release | ${{ needs.semver_tag.outputs.prerelease }} |"  >> $GITHUB_STEP_SUMMARY
          echo "| Release | Draft | true |" >> $GITHUB_STEP_SUMMARY
          echo "| Release | Pre-release | true |" >> $GITHUB_STEP_SUMMARY
          echo "| Release | Notes | true |" >> $GITHUB_STEP_SUMMARY
          echo "| Release | URL | [${{ needs.create_release.outputs.id }}](${{ needs.create_release.outputs.html_url }}) |"  >> $GITHUB_STEP_SUMMARY

  end:
    name: 'End of PR workflow'
    runs-on: 'ubuntu-latest'
    needs: [branch_name, semver_tag, create_release, summary]
    steps:
      - id: end
        name: End
        run: |
          echo "End"
