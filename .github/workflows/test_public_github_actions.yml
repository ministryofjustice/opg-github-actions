name: "[TEST] Public GitHub Actions"

on:
  workflow_dispatch:
  workflow_call:

permissions:
  actions: read

jobs:

  branch_name_from_env:
    name: "branch-name (from env)"
    runs-on: ubuntu-latest
    steps:
      # checkout self
      - name: "Checkout"
        id: checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0
          fetch-tags: true
      # run the branch-name action from env values
      - name: "Branch Name"
        id: "branchname"
        uses: ./actions/branch-name
      # summary
      - name: "Summary"
        run: |
          echo "| Variable | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |"  >> $GITHUB_STEP_SUMMARY
          echo "| branch_name | ${{ steps.branchname.outputs.branch_name }} |"  >> $GITHUB_STEP_SUMMARY
          echo "| full_length | ${{ steps.branchname.outputs.full_length }} |"  >> $GITHUB_STEP_SUMMARY
          echo "| safe | ${{ steps.branchname.outputs.safe }} |"  >> $GITHUB_STEP_SUMMARY

  branch_name_fixed:
    name: "branch-name (fixed values)"
    runs-on: ubuntu-latest
    steps:
      # checkout self
      - name: "Checkout"
        id: checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0
          fetch-tags: true
      # run the branch-name action from env values
      - name: "Branch Name"
        id: "branchname"
        uses: ./actions/branch-name
        with:
          name: "test !/branch name thats really long and has odd things in &!@Â£$"
      # summary
      - name: "Summary"
        run: |
          echo "| Variable | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |"  >> $GITHUB_STEP_SUMMARY
          echo "| branch_name | ${{ steps.branchname.outputs.branch_name }} |"  >> $GITHUB_STEP_SUMMARY
          echo "| full_length | ${{ steps.branchname.outputs.full_length }} |"  >> $GITHUB_STEP_SUMMARY
          echo "| safe | ${{ steps.branchname.outputs.safe }} |"  >> $GITHUB_STEP_SUMMARY

  terraform_version:
    name: "terraform-version"
    runs-on: ubuntu-latest
    steps:
      # checkout self
      - name: "Checkout"
        id: checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: "Terraform Version"
        id: "terraformversion"
        uses: ./actions/terraform-version
        with:
          terraform_directory: ./terraform/account
      # summary
      - name: "Summary"
        run: |
          echo "| Variable | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |"  >> $GITHUB_STEP_SUMMARY
          echo "| version | ${{ steps.terraformversion.outputs.version }} |"  >> $GITHUB_STEP_SUMMARY

  terraform_workspace_manager:
    runs-on: 'ubuntu-latest'
    name: "terraform-workspace-manager"
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref }}
      - id: test1
        name: "Test registration"
        uses: ./actions/terraform-workspace-manager
        with:
          # sandbox
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_account_id: '995199299616'
          aws_iam_role: 'gh-reusable-actions-ci'
          register_workspace: "t${{github.sha}}"
          # short ttl
          time_to_protect: 1
      - id: test2
        name: "Test listing"
        uses: ./actions/terraform-workspace-manager
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_account_id: '995199299616'
          aws_iam_role: 'gh-reusable-actions-ci'
      - id: test_results
        name: Test results
        run: |
          ws1="t${{github.sha}}"
          pw1="${{steps.test1.outputs.protected_workspaces}}"
          pw2="${{steps.test2.outputs.protected_workspaces}}"

          if [[ "${pw1}" != *"${ws1}"* ]]; then
            echo "workspace not found"
            exit 1
          fi

          if [[ "${pw1}" != "${pw2}" ]]; then
            echo "workspace list has changed"
            exit 1
          fi

  end:
    name: 'End'
    runs-on: 'ubuntu-latest'
    needs:
      - branch_name_from_env
      - branch_name_fixed
      - terraform_version
      - terraform_workspace_manager
    steps:
      - name: "End"
        id: end
        run: echo "End"
